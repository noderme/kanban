swagger: "2.0"
info:
  description: "This is the specification for a web service supporting a kanban application."
  version: "1.0.0"
  title: "SimpleKanban Service"
host: "localhost"
basePath: "/v2"
tags:
- name: "project"
  description: "Operations about the Project"
- name: "user"
  description: "Operations about User"
schemes:
- "http"
paths:
  /project:
    get: 
      tags:
      - "project"
      description: "Returns the list of projects in for the current user, both created and partecipated"
      operationId: "getProjects"
      consumes:
      - "application/json"
      produces:
      - "application/json"
      parameters:
      - in: "header"
        name: "Authentication"
        description: "Session token for the User creating the Project"
        required: true
        type: "string"
      - in: "query"
        name: "role"
        description: "Filter results based on whether the current User is the creator of the Project, is a team member. If the parameter is not provided, both will be returned"
        required: false
        type: "string"
        enum:
        - "member"
        - "creator"
      responses:
        200:
          description: "The list of found Project"
          schema:
            type: "array"
            items:
              $ref: "#/definitions/Project"
        400:
          description: "Input validation failed"
        401:
          description: "Invalid session token"
    post:
      tags:
      - "project"
      description: "Create a new project"
      operationId: "createProject"
      consumes:
      - "application/json"
      produces:
      - "application/json"
      parameters:
      - in: "header"
        name: "Authentication"
        description: "Session token for current User"
        required: true
        type: "string"
      - in: "body"
        name: "body"
        description: "Information for the object to be created"
        required: true
        schema:
          $ref: "#/definitions/Project"
      responses:
        200:
          description: "The created Project"
          schema:
            $ref: "#/definitions/Project"
        400:
          description: "Input validation failed"
        401:
          description: "Invalid session token"
  /project/{projectId}:
    get:
      tags:
      - "project"
      description: "Find Project by ID. Returns a single Project. If the current User isn't neither a creator or a member for the Project, a permission denied error will be return"
      operationId: "getProjectById"
      produces:
      - "application/json"
      parameters:
      - in: "header"
        name: "Authentication"
        description: "Session token for current User"
        required: true
        type: "string"
      - name: "projectId"
        in: "path"
        description: "ID of Project to return"
        required: true
        type: "integer"
        format: "int64"
      responses:
        200:
          description: "The found Project"
          schema:
            $ref: "#/definitions/Project"
        400:
          description: "Invalid ID supplied"
        401:
          description: "Invalid session token"
        403:
          description: "Permission denied for the current User"
        404:
          description: "Project not found"
  /project/{projectId}/team:
    get:
      tags:
      - "project"
      description: "Members list for a Project. If the current User isn't neither a creator or a member for the Project, a permission denied error will be return"
      produces:
      - "application/json"
      parameters:
      - in: "header"
        name: "Authentication"
        description: "Session token for the User requesting the list"
        required: true
        type: "string"
      - name: "projectId"
        in: "path"
        description: "ID of Project to return"
        required: true
        type: "integer"
        format: "int64"
      responses:
        200:
          description: "successful operation"
          schema:
            type: "array"
            items: 
              $ref: "#/definitions/User"
        400:
          description: "Invalid ID supplied"
        401:
          description: "Invalid session token"
        403:
          description: "Permission denied for the current User"
        404:
          description: "Project not found"
  /project/{projectId}/team/{userId}:
    post:
      tags:
      - "project"
      description: "Add a User as a members for a Project. If the current User isn't the creator or a member for the Project, a permission denied error will be return. If a the User is already a member, a success status is returned anyway"
      produces:
      - "application/json"
      parameters:
      - in: "header"
        name: "Authentication"
        description: "Session token for the User creating the Project"
        required: true
        type: "string"
      - name: "projectId"
        in: "path"
        description: "ID of Project to return"
        required: true
        type: "integer"
        format: "int64"
      - name: "userId"
        in: "path"
        description: "ID of the User to be added"
        required: true
        type: "integer"
        format: "int64"
      responses:
        200:
          description: "successful operation"
          schema:
            type: "array"
            items: 
              $ref: "#/definitions/User"
        400:
          description: "Invalid parameters supplied"
        401:
          description: "Invalid session token"
        403:
          description: "Permission denied for the current User"
        404:
          description: "Project not found"
    delete:
      tags:
      - "project"
      description: "Remove a User from the members of a Project. If the current User isn't the creator or a member for the Project, a permission denied error will be return. If a the User is not a member yet, a success status is returned anyway"
      produces:
      - "application/json"
      parameters:
      - in: "header"
        name: "Authentication"
        description: "Session token for the current User"
        required: true
        type: "string"
      - name: "projectId"
        in: "path"
        description: "ID of Project to return"
        required: true
        type: "integer"
        format: "int64"
      - name: "userId"
        in: "path"
        description: "ID of the User to be removed"
        required: true
        type: "integer"
        format: "int64"
      responses:
        200:
          description: "successful operation"
          schema:
            type: "array"
            items: 
              $ref: "#/definitions/User"
        400:
          description: "Invalid parameters supplied"
        401:
          description: "Invalid session token"
        403:
          description: "Permission denied for the current User"
        404:
          description: "Project not found"
  /project/{projectId}/task:
    get:
      tags:
      - "project"
      description: "Task list for a Project. If the current User isn't neither a creator or a member for the Project, a permission denied error will be return"
      produces:
      - "application/json"
      parameters:
      - in: "header"
        name: "Authentication"
        description: "Session token for the User requesting the list"
        required: true
        type: "string"
      - name: "projectId"
        in: "path"
        description: "ID of Project to return"
        required: true
        type: "integer"
        format: "int64"
      responses:
        200:
          description: "successful operation"
          schema:
            type: "array"
            items: 
              $ref: "#/definitions/Task"
        400:
          description: "Invalid ID supplied"
        401:
          description: "Invalid session token"
        403:
          description: "Permission denied for the current User"
        404:
          description: "Project not found"
    post:
      tags:
      - "project"
      description: "Create a new Task for a Project. If the current User isn't neither a creator or a member for the Project, a permission denied error will be return"
      produces:
      - "application/json"
      parameters:
      - in: "header"
        name: "Authentication"
        description: "Session token for the current User"
        required: true
        type: "string"
      - name: "projectId"
        in: "path"
        description: "ID of Project to return"
        required: true
        type: "integer"
        format: "int64"
      - in: "body"
        name: "body"
        description: "Information for the task to be created"
        required: true
        schema:
          $ref: "#/definitions/Task"
      responses:
        200:
          description: "successful operation"
          schema:
            type: "array"
            items: 
              $ref: "#/definitions/Task"
        400:
          description: "Invalid data supplied"
        401:
          description: "Invalid session token"
        403:
          description: "Permission denied for the current User"
        404:
          description: "Project not found"
  /project/{projectId}/task/{taskId}:
    put:
      tags:
      - "project"
      description: "Partial update for a Task. Updates may involve only few informations (title, description and/or status).If the current User isn't neither a creator or a member for the Project, a permission denied error will be return"
      produces:
      - "application/json"
      parameters:
      - in: "header"
        name: "Authentication"
        description: "Session token for the current User"
        required: true
        type: "string"
      - name: "projectId"
        in: "path"
        description: "ID of Project to return"
        required: true
        type: "integer"
        format: "int64"
      - name: "taskId"
        in: "path"
        description: "ID of Task to edit"
        required: true
        type: "integer"
        format: "int64"
      - in: "body"
        name: "body"
        description: "Created User object"
        required: true
        schema:
          type: "object"
          properties:
            title:
              type: "string"
            description: 
              type: "string"
            status:
              type: "string"
              enum:
              - "todo"
              - "progress"
              - "done" 
      responses:
        200:
          description: "successful operation"
          schema:
            type: "array"
            items: 
              $ref: "#/definitions/Task"
        400:
          description: "Invalid data supplied"
        401:
          description: "Invalid session token"
        403:
          description: "Permission denied for the current User"
        404:
          description: "Project or Task not found"
  /user:
    post:
      tags:
      - "user"
      description: "Create a new User"
      operationId: "createUser"
      produces:
      - "application/json"
      parameters:
      - in: "body"
        name: "body"
        description: "Created User object"
        required: true
        schema:
          $ref: "#/definitions/User"
      responses:
        200:
          description: "successful operation"
          schema: 
            $ref: "#/definitions/User"
        400:
          description: "Invalid parameters supplied"
        409:
          description: "Either username or email already exists"
  /user/login:
    get:
      tags:
      - "user"
      description: "Logs user into the system"
      operationId: "loginUser"
      produces:
      - "application/json"
      parameters:
      - name: "username"
        in: "query"
        description: "The user name for login"
        required: true
        type: "string"
      - name: "password"
        in: "query"
        description: "The password for login in clear text"
        required: true
        type: "string"
      responses:
        200:
          description: "the session token for the current logged user"
          schema:
            type: object
            properties:
              sessionToken:
                type: string
              id:
                description: "User id"
                type: "integer"
                format: "int64"
        400:
          description: "Invalid username/password supplied"
definitions:
  User:
    type: "object"
    required:
    -  "username"
    -  "password"
    -  "email"
    properties:
      id:
        type: "integer"
        format: "int64"
      username:
        type: "string"
      email:
        type: "string"
        format: "email"
      phone: 
        type: "string"
      title: 
        type: "string"
      avatar:
        type: "string"
      password:
        type: "string"
        format: "password"
      createdAt: 
        type: "string"
  Project:
    type: "object"
    properties:
      id:
        type: "integer"
        format: "int64"
      name:
        type: "string"
      createdAt: 
        type: "string"
      creator:
        $ref: "#/definitions/User"
      role:
        $ref: "#/definitions/MemberRole"
      team:
        type: "array"
        items:
          $ref: "#/definitions/User"
  Task:
    type: "object"
    required:
    - "title"
    - "status"
    properties:
      id:
        type: "integer"
        format: "int64"
      title:
        type: "string"
      description:
        type: "string"
      createdAt: 
        type: "string"
      updatedAt: 
        type: "string"
      status:
        type: "string"
        enum:
        - "todo"
        - "progress"
        - "done"
  MemberRole:
    type: "string"
    enum:
    - "member"
    - "creator"
